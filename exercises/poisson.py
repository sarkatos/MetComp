# -*- coding: utf-8 -*-
"""Poisson.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Cy9w-OOBV_L4T-uPY17QJ18-IMfL0UOs
"""

import numpy as np
import matplotlib.pyplot as plt
from time import time
from random import random

def experimentodepoisson(l,N):
  count = 0
  p = l/N
  for j in range(int(N)):
    x = random()
    if(x<p):
      count = 1 + count
  return count

def distribuicao_de_poisson(l,N=5000.,M=50,Nstep=5000):
  hist = M*[0]
  size = []
  for k in range(M):
    size.append(k+1)
  p = l/N
  for i in range(int(N)):
    count = 0
    for j in range(Nstep):
      x = random()
      if x < p : 
        count += 1
    hist[count] += 1
  plt.bar(size,hist)
  plt.show()
  return 

def decaimento_radioativo(N,dt,p,Nstep):
  X = []
  Y = []
  # N e o numero total de atomos iniciais do problema
  Nt = N # Nt Ã© o numero de atomos que ainda nao decairam
  for i in range(Nstep):
    decaimento = 0
    for j in range(1,Nt+1):
      x = random()
      if x < p:
        decaimento += 1
    Nt -= decaimento
    X.append(i*dt) ; Y.append(Nt)
  plt.plot(X,Y)
  plt.show()

print('Numero de nucleus que decairam =',experimentodepoisson(10.,N=10000000.))
distribuicao_de_poisson(1)
decaimento_radioativo(10**4,0.01,0.1,10**3)